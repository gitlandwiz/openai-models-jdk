/**
* OpenAI API
* APIs for sampling from and fine-tuning language models
*
* The version of the OpenAPI document: 1.2.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models


import com.squareup.moshi.Json

/**
 * 
 * @param prompt A text description of the desired image(s). The maximum length is 1000 characters.
 * @param n The number of images to generate. Must be between 1 and 10.
 * @param size The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.
 * @param responseFormat The format in which the generated images are returned. Must be one of `url` or `b64_json`.
 */

data class CreateImageRequest (
    /* A text description of the desired image(s). The maximum length is 1000 characters. */
    @Json(name = "prompt")
    val prompt: kotlin.String,
    /* The number of images to generate. Must be between 1 and 10. */
    @Json(name = "n")
    val n: kotlin.Int? = null,
    /* The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`. */
    @Json(name = "size")
    val size: CreateImageRequest.Size? = null,
    /* The format in which the generated images are returned. Must be one of `url` or `b64_json`. */
    @Json(name = "response_format")
    val responseFormat: CreateImageRequest.ResponseFormat? = null
) {

    /**
     * The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.
     * Values: _256x256,_512x512,_1024x1024
     */
    enum class Size(val value: kotlin.String) {
        @Json(name = "256x256") _256x256("256x256"),
        @Json(name = "512x512") _512x512("512x512"),
        @Json(name = "1024x1024") _1024x1024("1024x1024");
    }
    /**
     * The format in which the generated images are returned. Must be one of `url` or `b64_json`.
     * Values: url,b64Json
     */
    enum class ResponseFormat(val value: kotlin.String) {
        @Json(name = "url") url("url"),
        @Json(name = "b64_json") b64Json("b64_json");
    }
}

